{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external {\"root\":\"L\",\"commonjs\":\"leaflet\",\"commonjs2\":\"leaflet\",\"amd\":\"leaflet\"}","webpack:///./src/leaflet.trackplayback/util.js","webpack:///./src/leaflet.trackplayback/track.js","webpack:///./src/leaflet.trackplayback/trackcontroller.js","webpack:///./src/leaflet.trackplayback/clock.js","webpack:///./src/leaflet.trackplayback/tracklayer.js","webpack:///./src/leaflet.trackplayback/draw.js","webpack:///./src/leaflet.trackplayback/trackplayback.js","webpack:///./src/leaflet.trackplayback/index.js"],"names":["root","factory","exports","module","require","define","amd","a","i","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isArray","arr","Array","toString","Track","external_root_L_commonjs_leaflet_commonjs2_leaflet_amd_leaflet_default","Class","extend","initialize","trackData","options","setOptions","this","forEach","item","isOrigin","_trackPoints","_timeTick","_update","addTrackPoint","trackPoint","len","length","_addTrackPoint","getTimes","times","push","time","getStartTrackPoint","getEndTrackPoint","getTrackPointByTime","_getCalculateTrackPointByTime","endpoint","startPt","endPt","left","right","parseInt","t0","t1","p0","p1","point","lng","lat","distanceTo","v","sinx","y","cosx","x","step","dir","Math","PI","asin","undefined","getTrackPointsBeforeTime","tpoints","_sortTrackPointsByTime","_updatetimeTick","j","tmp","TrackController","tracks","draw","_tracks","addTrack","_draw","_updateTime","getMinTime","_minTime","getMaxTime","_maxTime","track","Error","drawTracksByTime","clear","tps","drawTrack","stime","etime","Clock","includes","Mixin","Events","speed","maxSpeed","trackController","_trackController","_endTime","_curTime","_speed","_maxSpeed","_intervalID","_lastFpsUpdateTime","start","Util","requestAnimFrame","_tick","stop","cancelAnimFrame","rePlaying","slowSpeed","quickSpeed","getSpeed","getCurTime","getStartTime","getEndTime","isPlaying","setCursor","fire","setSpeed","_caculatefpsTime","now","Date","isPause","stepTime","pow","TrackLayer","Renderer","padding","onAdd","map","_container","DomUtil","getPane","pane","appendChild","_ctx","getContext","onRemove","remove","getContainer","getBounds","_bounds","_map","_animatingZoom","b","container","size","getSize","Browser","retina","setPosition","min","width","height","style","scale","translate","Draw","trackPointOptions","isDraw","useCanvas","stroke","color","fill","fillColor","opacity","radius","trackLineOptions","weight","targetOptions","useImg","imgUrl","showText","toolTipOptions","offset","direction","permanent","_showTrackPoint","_showTrackLine","on","_onmousemoveEvt","_trackLayer","addTo","_trackLayerUpdate","_canvas","_bufferTracks","_trackPointFeatureGroup","featureGroup","img","Image","onload","_targetImg","onerror","src","update","trackpoints","_drawTrack","showTrackPoint","hideTrackPoint","showTrackLine","hideTrackLine","off","hasLayer","removeLayer","_clearLayer","element","index","e","layerPoint","leni","tpoint","_getLayerPoint","_opentoolTip","_tooltip","cursor","trackpoint","latlng","latLng","tooltip","setLatLng","setContent","_getTooltipText","_drawTrackLine","targetPoint","_drawShipImage","_drawShipCanvas","_drawtxt","_drawTrackPointsCanvas","_drawTrackPointsSvg","tp0","save","beginPath","moveTo","tpi","lineTo","globalAlpha","strokeStyle","lineWidth","fillStyle","restore","latLngToLayerPoint","arc","cricleMarker","circleMarker","bindTooltip","addLayer","text","font","textAlign","textBaseline","fillText","rotate","drawImage","targetobj","content","info","join","bounds","clearRect","clearLayers","[object Object]","TrackPlayBack","data","drawOptions","_initTracks","clock","clockOptions","dispose","trackplayback"],"mappings":"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","file":"leaflet.trackplayback.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"leaflet\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"leaflet\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"leaflet\")) : factory(root[\"L\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","export function isArray (arr) {\n  return Array.isArray ? Array.isArray(arr) : Object.prototype.toString.call(arr) === '[object Array]'\n}\n","import L from 'leaflet'\n\nimport {\n  isArray\n} from './util'\n\n/**\n * 轨迹类\n */\nexport const Track = L.Class.extend({\n\n  initialize: function (trackData = [], options) {\n    L.setOptions(this, options)\n\n    trackData.forEach(item => {\n      // 添加 isOrigin 字段用来标识是否是原始采样点，与插值点区分开\n      item.isOrigin = true\n    })\n    this._trackPoints = trackData\n    this._timeTick = {}\n    this._update()\n  },\n\n  addTrackPoint: function (trackPoint) {\n    if (isArray(trackPoint)) {\n      for (let i = 0, len = trackPoint.length; i < len; i++) {\n        this.addTrackPoint(trackPoint[i])\n      }\n    }\n    this._addTrackPoint(trackPoint)\n  },\n\n  getTimes: function () {\n    let times = []\n    for (let i = 0, len = this._trackPoints.length; i < len; i++) {\n      times.push(this._trackPoints[i].time)\n    }\n    return times\n  },\n\n  getStartTrackPoint: function () {\n    return this._trackPoints[0]\n  },\n\n  getEndTrackPoint: function () {\n    return this._trackPoints[this._trackPoints.length - 1]\n  },\n\n  getTrackPointByTime: function (time) {\n    return this._trackPoints[this._timeTick[time]]\n  },\n\n  _getCalculateTrackPointByTime: function (time) {\n    // 先判断最后一个点是否为原始点\n    let endpoint = this.getTrackPointByTime(time)\n    let startPt = this.getStartTrackPoint()\n    let endPt = this.getEndTrackPoint()\n    let times = this.getTimes()\n    if (time < startPt.time || time > endPt.time) return\n    let left = 0\n    let right = times.length - 1\n    let n\n    // 处理只有一个点情况\n    if (left === right) {\n      return endpoint\n    }\n    // 通过【二分查找】法查出当前时间所在的时间区间\n    while (right - left !== 1) {\n      n = parseInt((left + right) / 2)\n      if (time > times[n]) left = n\n      else right = n\n    }\n\n    let t0 = times[left]\n    let t1 = times[right]\n    let t = time\n    let p0 = this.getTrackPointByTime(t0)\n    let p1 = this.getTrackPointByTime(t1)\n    startPt = L.point(p0.lng, p0.lat)\n    endPt = L.point(p1.lng, p1.lat)\n    let s = startPt.distanceTo(endPt)\n    // 不同时间在同一个点情形\n    if (s <= 0) {\n      endpoint = p1\n      return endpoint\n    }\n    // 假设目标在两点间做匀速直线运动\n    // 求解速度向量，并计算时间 t 目标所在位置\n    let v = s / (t1 - t0)\n    let sinx = (endPt.y - startPt.y) / s\n    let cosx = (endPt.x - startPt.x) / s\n    let step = v * (t - t0)\n    let x = startPt.x + step * cosx\n    let y = startPt.y + step * sinx\n    // 求目标的运动方向，0-360度\n    let dir = endPt.x >= startPt.x ? (Math.PI * 0.5 - Math.asin(sinx)) * 180 / Math.PI : (Math.PI * 1.5 + Math.asin(sinx)) * 180 / Math.PI\n\n    if (endpoint) {\n      if (endpoint.dir === undefined) {\n        endpoint.dir = dir\n      }\n    } else {\n      endpoint = {\n        lng: x,\n        lat: y,\n        dir: endPt.dir || dir,\n        isOrigin: false,\n        time: time\n      }\n    }\n    return endpoint\n  },\n\n  // 获取某个时间点之前走过的轨迹\n  getTrackPointsBeforeTime: function (time) {\n    let tpoints = []\n    for (let i = 0, len = this._trackPoints.length; i < len; i++) {\n      if (this._trackPoints[i].time < time) {\n        tpoints.push(this._trackPoints[i])\n      }\n    }\n    // 获取最后一个点，根据时间线性插值而来\n    let endPt = this._getCalculateTrackPointByTime(time)\n    if (endPt) {\n      tpoints.push(endPt)\n    }\n    return tpoints\n  },\n\n  _addTrackPoint: function (trackPoint) {\n    trackPoint.isOrigin = true\n    this._trackPoints.push(trackPoint)\n    this._update()\n  },\n\n  _update: function () {\n    this._sortTrackPointsByTime()\n    this._updatetimeTick()\n  },\n\n  // 轨迹点按时间排序 【冒泡排序】\n  _sortTrackPointsByTime: function () {\n    let len = this._trackPoints.length\n    for (let i = 0; i < len; i++) {\n      for (let j = 0; j < len - 1 - i; j++) {\n        if (this._trackPoints[j].time > this._trackPoints[j + 1].time) {\n          let tmp = this._trackPoints[j + 1]\n          this._trackPoints[j + 1] = this._trackPoints[j]\n          this._trackPoints[j] = tmp\n        }\n      }\n    }\n  },\n\n  // 为轨迹点建立时间索引，优化查找性能\n  _updatetimeTick: function () {\n    this._timeTick = {}\n    for (let i = 0, len = this._trackPoints.length; i < len; i++) {\n      this._timeTick[this._trackPoints[i].time] = i\n    }\n  }\n})\n\nexport const track = function (trackData, options) {\n  return new Track(trackData, options)\n}\n","import L from 'leaflet'\n\nimport {\n  isArray\n} from './util'\nimport {\n  Track\n} from './track'\n\n/**\n * 控制器类\n * 控制轨迹和绘制\n */\nexport const TrackController = L.Class.extend({\n\n  initialize: function (tracks = [], draw, options) {\n    L.setOptions(this, options)\n\n    this._tracks = []\n    this.addTrack(tracks)\n\n    this._draw = draw\n\n    this._updateTime()\n  },\n\n  getMinTime: function () {\n    return this._minTime\n  },\n\n  getMaxTime: function () {\n    return this._maxTime\n  },\n\n  addTrack: function (track) {\n    if (isArray(track)) {\n      for (let i = 0, len = track.length; i < len; i++) {\n        this.addTrack(track[i])\n      }\n    } else if (track instanceof Track) {\n      this._tracks.push(track)\n      this._updateTime()\n    } else {\n      throw new Error('tracks must be an instance of `Track` or an array of `Track` instance!')\n    }\n  },\n\n  drawTracksByTime: function (time) {\n    this._draw.clear()\n    for (let i = 0, len = this._tracks.length; i < len; i++) {\n      let track = this._tracks[i]\n      let tps = track.getTrackPointsBeforeTime(time)\n      if (tps && tps.length) this._draw.drawTrack(tps)\n    }\n  },\n\n  _updateTime: function () {\n    this._minTime = this._tracks[0].getStartTrackPoint().time\n    this._maxTime = this._tracks[0].getEndTrackPoint().time\n    for (let i = 0, len = this._tracks.length; i < len; i++) {\n      let stime = this._tracks[i].getStartTrackPoint().time\n      let etime = this._tracks[i].getEndTrackPoint().time\n      if (stime < this._minTime) {\n        this._minTime = stime\n      }\n      if (etime > this._maxTime) {\n        this._maxTime = etime\n      }\n    }\n  }\n\n})\n\nexport const trackController = function (tracks, draw, options) {\n  return new TrackController(tracks, draw, options)\n}\n","import L from 'leaflet'\n/**\n * 时钟类，控制轨迹播放动画\n */\nexport const Clock = L.Class.extend({\n\n  includes: L.Mixin.Events,\n\n  options: {\n    // 播放速度\n    // 计算方法 fpstime * Math.pow(2, this._speed - 1)\n    speed: 12,\n    // 最大播放速度\n    maxSpeed: 65\n  },\n\n  initialize: function (trackController, options) {\n    L.setOptions(this, options)\n\n    this._trackController = trackController\n    this._endTime = this._trackController.getMaxTime()\n    this._curTime = this._trackController.getMinTime()\n    this._speed = this.options.speed\n    this._maxSpeed = this.options.maxSpeed\n    this._intervalID = null\n    this._lastFpsUpdateTime = 0\n  },\n\n  start: function () {\n    if (this._intervalID) return\n    this._intervalID = L.Util.requestAnimFrame(this._tick, this)\n  },\n\n  stop: function () {\n    if (!this._intervalID) return\n    L.Util.cancelAnimFrame(this._intervalID)\n    this._intervalID = null\n    this._lastFpsUpdateTime = 0\n  },\n\n  rePlaying: function () {\n    this.stop()\n    this._curTime = this._trackController.getMinTime()\n    this.start()\n  },\n\n  slowSpeed: function () {\n    this._speed = this._speed <= 1 ? this._speed : this._speed - 1\n    if (this._intervalID) {\n      this.stop()\n      this.start()\n    }\n  },\n\n  quickSpeed: function () {\n    this._speed = this._speed >= this._maxSpeed ? this._speed : this._speed + 1\n    if (this._intervalID) {\n      this.stop()\n      this.start()\n    }\n  },\n\n  getSpeed: function () {\n    return this._speed\n  },\n\n  getCurTime: function () {\n    return this._curTime\n  },\n\n  getStartTime: function () {\n    return this._trackController.getMinTime()\n  },\n\n  getEndTime: function () {\n    return this._trackController.getMaxTime()\n  },\n\n  isPlaying: function () {\n    return !!this._intervalID\n  },\n\n  setCursor: function (time) {\n    this._curTime = time\n    this._trackController.drawTracksByTime(this._curTime)\n    this.fire('tick', {\n      time: this._curTime\n    })\n  },\n\n  setSpeed: function (speed) {\n    this._speed = speed\n    if (this._intervalID) {\n      this.stop()\n      this.start()\n    }\n  },\n\n  // 计算两帧时间间隔，单位：秒\n  _caculatefpsTime: function (now) {\n    let time\n    if (this._lastFpsUpdateTime === 0) {\n      time = 0\n    } else {\n      time = now - this._lastFpsUpdateTime\n    }\n    this._lastFpsUpdateTime = now\n    // 将毫秒转换成秒\n    time = time / 1000\n    return time\n  },\n\n  _tick: function () {\n    let now = +new Date()\n    let fpstime = this._caculatefpsTime(now)\n    let isPause = false\n    let stepTime = fpstime * Math.pow(2, this._speed - 1)\n    this._curTime += stepTime\n    if (this._curTime >= this._endTime) {\n      this._curTime = this._endTime\n      isPause = true\n    }\n    this._trackController.drawTracksByTime(this._curTime)\n    this.fire('tick', {\n      time: this._curTime\n    })\n    if (!isPause) this._intervalID = L.Util.requestAnimFrame(this._tick, this)\n  }\n})\n\nexport const clock = function (trackController, options) {\n  return new Clock(trackController, options)\n}\n","import L from 'leaflet'\n\n/**\n * 轨迹图层\n */\nexport const TrackLayer = L.Renderer.extend({\n\n  initialize: function (options) {\n    L.Renderer.prototype.initialize.call(this, options)\n    this.options.padding = 0.1\n  },\n\n  onAdd: function (map) {\n    this._container = L.DomUtil.create('canvas', 'leaflet-zoom-animated')\n\n    var pane = map.getPane(this.options.pane)\n    pane.appendChild(this._container)\n\n    this._ctx = this._container.getContext('2d')\n\n    this._update()\n  },\n\n  onRemove: function (map) {\n    L.DomUtil.remove(this._container)\n  },\n\n  getContainer: function () {\n    return this._container\n  },\n\n  getBounds: function () {\n    return this._bounds\n  },\n\n  _update: function () {\n    if (this._map._animatingZoom && this._bounds) {\n      return\n    }\n\n    L.Renderer.prototype._update.call(this)\n\n    var b = this._bounds\n\n    var container = this._container\n\n    var size = b.getSize()\n\n    var m = L.Browser.retina ? 2 : 1\n\n    L.DomUtil.setPosition(container, b.min)\n\n    // set canvas size (also clearing it); use double size on retina\n    container.width = m * size.x\n    container.height = m * size.y\n    container.style.width = size.x + 'px'\n    container.style.height = size.y + 'px'\n\n    if (L.Browser.retina) {\n      this._ctx.scale(2, 2)\n    }\n\n    // translate so we use the same path coordinates after canvas element moves\n    this._ctx.translate(-b.min.x, -b.min.y)\n\n    // Tell paths to redraw themselves\n    this.fire('update')\n  }\n})\n","import L from 'leaflet'\n\nimport {\n  TrackLayer\n} from './tracklayer'\n\n/**\n * 绘制类\n * 完成轨迹线、轨迹点、目标物的绘制工作\n */\nexport const Draw = L.Class.extend({\n\n  trackPointOptions: {\n    isDraw: false,\n    useCanvas: true,\n    stroke: false,\n    color: '#ef0300',\n    fill: true,\n    fillColor: '#ef0300',\n    opacity: 0.3,\n    radius: 4\n  },\n  trackLineOptions: {\n    isDraw: false,\n    stroke: true,\n    color: '#1C54E2', // stroke color\n    weight: 2,\n    fill: false,\n    fillColor: '#000',\n    opacity: 0.3\n  },\n  targetOptions: {\n    useImg: false,\n    imgUrl: '../../static/images/ship.png',\n    showText: false,\n    width: 8,\n    height: 18,\n    color: '#00f', // stroke color\n    fillColor: '#9FD12D'\n  },\n  toolTipOptions: {\n    offset: [0, 0],\n    direction: 'top',\n    permanent: false\n  },\n\n  initialize: function (map, options) {\n    L.extend(this.trackPointOptions, options.trackPointOptions)\n    L.extend(this.trackLineOptions, options.trackLineOptions)\n    L.extend(this.targetOptions, options.targetOptions)\n    L.extend(this.toolTipOptions, options.toolTipOptions)\n\n    this._showTrackPoint = this.trackPointOptions.isDraw\n    this._showTrackLine = this.trackLineOptions.isDraw\n\n    this._map = map\n    this._map.on('mousemove', this._onmousemoveEvt, this)\n\n    this._trackLayer = new TrackLayer().addTo(map)\n    this._trackLayer.on('update', this._trackLayerUpdate, this)\n\n    this._canvas = this._trackLayer.getContainer()\n    this._ctx = this._canvas.getContext('2d')\n\n    this._bufferTracks = []\n\n    if (!this.trackPointOptions.useCanvas) {\n      this._trackPointFeatureGroup = L.featureGroup([]).addTo(map)\n    }\n\n    // 目标如果使用图片，先加载图片\n    if (this.targetOptions.useImg) {\n      const img = new Image()\n      img.onload = () => {\n        this._targetImg = img\n      }\n      img.onerror = () => {\n        throw new Error('img load error!')\n      }\n      img.src = this.targetOptions.imgUrl\n    }\n  },\n\n  update: function () {\n    this._trackLayerUpdate()\n  },\n\n  drawTrack: function (trackpoints) {\n    this._bufferTracks.push(trackpoints)\n    this._drawTrack(trackpoints)\n  },\n\n  showTrackPoint: function () {\n    this._showTrackPoint = true\n    this.update()\n  },\n\n  hideTrackPoint: function () {\n    this._showTrackPoint = false\n    this.update()\n  },\n\n  showTrackLine: function () {\n    this._showTrackLine = true\n    this.update()\n  },\n\n  hideTrackLine: function () {\n    this._showTrackLine = false\n    this.update()\n  },\n\n  remove: function () {\n    this._bufferTracks = []\n    this._trackLayer.off('update', this._trackLayerUpdate, this)\n    this._map.off('mousemove', this._onmousemoveEvt, this)\n    if (this._map.hasLayer(this._trackLayer)) {\n      this._map.removeLayer(this._trackLayer)\n    }\n    if (this._map.hasLayer(this._trackPointFeatureGroup)) {\n      this._map.removeLayer(this._trackPointFeatureGroup)\n    }\n  },\n\n  clear: function () {\n    this._clearLayer()\n    this._bufferTracks = []\n  },\n\n  _trackLayerUpdate: function () {\n    if (this._bufferTracks.length) {\n      this._clearLayer()\n      this._bufferTracks.forEach(function (element, index) {\n        this._drawTrack(element)\n      }.bind(this))\n    }\n  },\n\n  _onmousemoveEvt: function (e) {\n    if (!this._showTrackPoint) {\n      return\n    }\n    let point = e.layerPoint\n    if (this._bufferTracks.length) {\n      for (let i = 0, leni = this._bufferTracks.length; i < leni; i++) {\n        for (let j = 0, len = this._bufferTracks[i].length; j < len; j++) {\n          let tpoint = this._getLayerPoint(this._bufferTracks[i][j])\n          if (point.distanceTo(tpoint) <= this.trackPointOptions.radius) {\n            this._opentoolTip(this._bufferTracks[i][j])\n            return\n          }\n        }\n      }\n    }\n    if (this._map.hasLayer(this._tooltip)) {\n      this._map.removeLayer(this._tooltip)\n    }\n    this._canvas.style.cursor = 'pointer'\n  },\n\n  _opentoolTip: function (trackpoint) {\n    if (this._map.hasLayer(this._tooltip)) {\n      this._map.removeLayer(this._tooltip)\n    }\n    this._canvas.style.cursor = 'default'\n    let latlng = L.latLng(trackpoint.lat, trackpoint.lng)\n    let tooltip = this._tooltip = L.tooltip(this.toolTipOptions)\n    tooltip.setLatLng(latlng)\n    tooltip.addTo(this._map)\n    tooltip.setContent(this._getTooltipText(trackpoint))\n  },\n\n  _drawTrack: function (trackpoints) {\n    // 画轨迹线\n    if (this._showTrackLine) {\n      this._drawTrackLine(trackpoints)\n    }\n    // 画船\n    let targetPoint = trackpoints[trackpoints.length - 1]\n    if (this.targetOptions.useImg && this._targetImg) {\n      this._drawShipImage(targetPoint)\n    } else {\n      this._drawShipCanvas(targetPoint)\n    }\n    // 画标注信息\n    if (this.targetOptions.showText) {\n      this._drawtxt(`航向：${parseInt(targetPoint.dir)}度`, targetPoint)\n    }\n    // 画经过的轨迹点\n    if (this._showTrackPoint) {\n      if (this.trackPointOptions.useCanvas) {\n        this._drawTrackPointsCanvas(trackpoints)\n      } else {\n        this._drawTrackPointsSvg(trackpoints)\n      }\n    }\n  },\n\n  _drawTrackLine: function (trackpoints) {\n    let options = this.trackLineOptions\n    let tp0 = this._getLayerPoint(trackpoints[0])\n    this._ctx.save()\n    this._ctx.beginPath()\n    // 画轨迹线\n    this._ctx.moveTo(tp0.x, tp0.y)\n    for (let i = 1, len = trackpoints.length; i < len; i++) {\n      let tpi = this._getLayerPoint(trackpoints[i])\n      this._ctx.lineTo(tpi.x, tpi.y)\n    }\n    this._ctx.globalAlpha = options.opacity\n    if (options.stroke) {\n      this._ctx.strokeStyle = options.color\n      this._ctx.lineWidth = options.weight\n      this._ctx.stroke()\n    }\n    if (options.fill) {\n      this._ctx.fillStyle = options.fillColor\n      this._ctx.fill()\n    }\n    this._ctx.restore()\n  },\n\n  _drawTrackPointsCanvas: function (trackpoints) {\n    let options = this.trackPointOptions\n    this._ctx.save()\n    for (let i = 0, len = trackpoints.length; i < len; i++) {\n      if (trackpoints[i].isOrigin) {\n        let latLng = L.latLng(trackpoints[i].lat, trackpoints[i].lng)\n        let radius = options.radius\n        let point = this._map.latLngToLayerPoint(latLng)\n        this._ctx.beginPath()\n        this._ctx.arc(point.x, point.y, radius, 0, Math.PI * 2, false)\n        this._ctx.globalAlpha = options.opacity\n        if (options.stroke) {\n          this._ctx.strokeStyle = options.color\n          this._ctx.stroke()\n        }\n        if (options.fill) {\n          this._ctx.fillStyle = options.fillColor\n          this._ctx.fill()\n        }\n      }\n    }\n    this._ctx.restore()\n  },\n\n  _drawTrackPointsSvg: function (trackpoints) {\n    for (let i = 0, len = trackpoints.length; i < len; i++) {\n      if (trackpoints[i].isOrigin) {\n        let latLng = L.latLng(trackpoints[i].lat, trackpoints[i].lng)\n        let cricleMarker = L.circleMarker(latLng, this.trackPointOptions)\n        cricleMarker.bindTooltip(this._getTooltipText(trackpoints[i]), this.toolTipOptions)\n        this._trackPointFeatureGroup.addLayer(cricleMarker)\n      }\n    }\n  },\n\n  _drawtxt: function (text, trackpoint) {\n    let point = this._getLayerPoint(trackpoint)\n    this._ctx.save()\n    this._ctx.font = '12px Verdana'\n    this._ctx.fillStyle = '#000'\n    this._ctx.textAlign = 'center'\n    this._ctx.textBaseline = 'bottom'\n    this._ctx.fillText(text, point.x, point.y - 12, 200)\n    this._ctx.restore()\n  },\n\n  _drawShipCanvas: function (trackpoint) {\n    let point = this._getLayerPoint(trackpoint)\n    this._ctx.save()\n    this._ctx.fillStyle = this.targetOptions.fillColor\n    this._ctx.strokeStyle = this.targetOptions.color\n    this._ctx.translate(point.x, point.y)\n    this._ctx.beginPath()\n    this._ctx.arc(0, 0, this.targetOptions.width, 0, 2 * Math.PI)\n    this._ctx.fill()\n    this._ctx.stroke()\n    this._ctx.restore()\n  },\n\n  _drawShipImage: function (trackpoint) {\n    let point = this._getLayerPoint(trackpoint)\n    let dir = trackpoint.dir || 0\n    let width = this.targetOptions.width\n    let height = this.targetOptions.height\n    let offset = {\n      x: width / 2,\n      y: height / 2\n    }\n    this._ctx.save()\n    this._ctx.translate(point.x, point.y)\n    this._ctx.rotate((Math.PI / 180) * dir)\n    this._ctx.drawImage(this._targetImg, 0 - offset.x, 0 - offset.y, width, height)\n    this._ctx.restore()\n  },\n\n  _getTooltipText: function (targetobj) {\n    let content = []\n    content.push('<table>')\n    if (targetobj.info && targetobj.info.length) {\n      for (let i = 0, len = targetobj.info.length; i < len; i++) {\n        content.push('<tr>')\n        content.push('<td>' + targetobj.info[i].key + '</td>')\n        content.push('<td>' + targetobj.info[i].value + '</td>')\n        content.push('</tr>')\n      }\n    }\n    content.push('</table>')\n    content = content.join('')\n    return content\n  },\n\n  _clearLayer: function () {\n    let bounds = this._trackLayer.getBounds()\n    if (bounds) {\n      let size = bounds.getSize()\n      this._ctx.clearRect(bounds.min.x, bounds.min.y, size.x, size.y)\n    } else {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height)\n    }\n    if (this._map.hasLayer(this._trackPointFeatureGroup)) {\n      this._trackPointFeatureGroup.clearLayers()\n    }\n  },\n\n  _getLayerPoint (trackpoint) {\n    return this._map.latLngToLayerPoint(L.latLng(trackpoint.lat, trackpoint.lng))\n  }\n})\n\nexport const draw = function (map, options) {\n  return new Draw(map, options)\n}\n","import L from 'leaflet'\n\nimport {\n  Track\n} from './track'\nimport {\n  TrackController\n} from './trackcontroller'\nimport {\n  Clock\n} from './clock'\nimport {\n  Draw\n} from './draw'\nimport * as Util from './util'\n\n/**\n * single track data\n * [{lat: 30, lng: 116, time: 1502529980, heading: 300, info:[]},{},....]\n *\n * mutiple track data\n * [single track data, single track data, single track data]\n */\nexport const TrackPlayBack = L.Class.extend({\n\n  includes: L.Mixin.Events,\n\n  initialize: function (data, map, options = {}) {\n    let drawOptions = {\n      trackPointOptions: options.trackPointOptions,\n      trackLineOptions: options.trackLineOptions,\n      targetOptions: options.targetOptions,\n      toolTipOptions: options.toolTipOptions\n    }\n    this.tracks = this._initTracks(data)\n    this.draw = new Draw(map, drawOptions)\n    this.trackController = new TrackController(this.tracks, this.draw)\n    this.clock = new Clock(this.trackController, options.clockOptions)\n\n    this.clock.on('tick', this._tick, this)\n  },\n  start: function () {\n    this.clock.start()\n    return this\n  },\n  stop: function () {\n    this.clock.stop()\n    return this\n  },\n  rePlaying: function () {\n    this.clock.rePlaying()\n    return this\n  },\n  slowSpeed: function () {\n    this.clock.slowSpeed()\n    return this\n  },\n  quickSpeed: function () {\n    this.clock.quickSpeed()\n    return this\n  },\n  getSpeed: function () {\n    return this.clock.getSpeed()\n  },\n  getCurTime: function () {\n    return this.clock.getCurTime()\n  },\n  getStartTime: function () {\n    return this.clock.getStartTime()\n  },\n  getEndTime: function () {\n    return this.clock.getEndTime()\n  },\n  isPlaying: function () {\n    return this.clock.isPlaying()\n  },\n  setCursor: function (time) {\n    this.clock.setCursor(time)\n    return this\n  },\n  setSpeed: function (speed) {\n    this.clock.setSpeed(speed)\n    return this\n  },\n  showTrackPoint: function () {\n    this.draw.showTrackPoint()\n    return this\n  },\n  hideTrackPoint: function () {\n    this.draw.hideTrackPoint()\n    return this\n  },\n  showTrackLine: function () {\n    this.draw.showTrackLine()\n    return this\n  },\n  hideTrackLine: function () {\n    this.draw.hideTrackLine()\n    return this\n  },\n  dispose: function () {\n    this.clock.off('tick', this._tick)\n    this.draw.remove()\n    this.tracks = null\n    this.draw = null\n    this.trackController = null\n    this.clock = null\n  },\n  _tick: function (e) {\n    this.fire('tick', e)\n  },\n  _initTracks: function (data) {\n    let tracks = []\n    if (Util.isArray(data)) {\n      if (Util.isArray(data[0])) {\n        // 多条轨迹\n        for (let i = 0, len = data.length; i < len; i++) {\n          tracks.push(new Track(data[i]))\n        }\n      } else {\n        // 单条轨迹\n        tracks.push(new Track(data))\n      }\n    }\n    return tracks\n  }\n})\n\nexport const trackplayback = function (data, map, options) {\n  return new TrackPlayBack(data, map, options)\n}\n","import L from 'leaflet'\n\nimport {\n  TrackPlayBack,\n  trackplayback\n} from './trackplayback'\n\nL.TrackPlayBack = TrackPlayBack\nL.trackplayback = trackplayback\n"],"sourceRoot":""}